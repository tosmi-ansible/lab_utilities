apiVersion: kubevirt.io/v1
kind: VirtualMachineInstance
metadata:
  name: "{{ vm.name }}"
  namespace: "{{ kubevirt_vms.namespace }}"
spec:
  architecture: amd64
  domain:
    cpu:
      cores: "{{ vm.cores | int }}"
      model: host-model
      sockets: 1
      threads: 1
    devices:
      disks:
      - disk:
          bus: virtio
        name: rootdisk
      - disk:
          bus: virtio
        name: cloudinitdisk
    interfaces:
      - name: default
        masquerade: {}
        model: virtio
      - bridge: {}
        {%- if vm.mac is defined %}
        macAddress: "{{ vm.mac }}"
        {%- endif %}
        model: virtio
        name: bridge-network
    features:
      acpi:
        enabled: true
    machine:
      type: pc-q35-rhel9.2.0
    memory:
      guest: "{{ vm.memory }}"
  networks:
  - name: default
    pod: {}
  - multus:
      networkName: default/bridge-network
    name: bridge-network
  terminationGracePeriodSeconds: 180
  volumes:
  - dataVolume:
      name: "{{ vm.name }}"
    name: rootdisk
  - cloudInitNoCloud:
      userData: |-
        #cloud-config
        user: admin
        ssh_authorized_keys:
          - "{{ kubevirt_vms.ssh_public_key }}"
        chpasswd: { expire: False }
    name: cloudinitdisk
