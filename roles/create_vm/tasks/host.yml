---
- name: Print information about host
  ansible.builtin.debug:
    msg: "Going to create host {{ item.name }} with a {{ item.disksize | default('10') }} disk image, {{ item.cpu | default('1') }} cpu(s) and {{ item.memory | default('2048') }} memory"


- name: Gather facts about the used network
  community.libvirt.virt_net:
    command: facts
    name: "{{ lab.network.name }}"

# - debug: var=ansible_libvirt_networks

- name: Set fact for bridge name
  ansible.builtin.set_fact:
    _create_vm_bridge_name: "{{ ansible_libvirt_networks[lab.network.name]['bridge'] }}"
  when:
    - lab.network.type == 'bridge'

- name: Set the default image source
  ansible.builtin.set_fact:
    lab_host_image_src: "{{ lab_host_image_path }}/{{ item.image | default(lab_default_image) }}"

- name: Set qemu connect URI for {{ item.name }}
  ansible.builtin.set_fact:
    _create_vm_qemu_uri: "{{ 'qemu:///session' if 'session' in item.libvirt_session | default('qemu:///system') }}"

- name: Check if guest is already defined "{{ item.name }}"
  community.libvirt.virt:
    command: info
  register: lab_virt_info

- name: Add a static DHCP entry for host {{ item.name }}
  community.libvirt.virt_net:
    name: "{{ lab.network.name }}"
    command: modify
    xml: "<host mac='{{ item.macaddr }}' name='{{ item.name }}' ip='{{ item.ipaddr }}'/>"

- name: Create a host based on a RHEL image
  include_tasks: rhel_host.yml
  when:
    - ( item.image is not defined or item.image != "blank" )
    - item.name not in lab_virt_info

- name: Create a blank host
  include_tasks: blank_host.yml
  when:
    - item.image == "blank"
    - item.name not in lab_virt_info

- name: Enable autostart for host {{ item.name }}
  community.libvirt.virt:
    autostart: yes
    uri: "{{ _create_vm_qemu_uri }}"
    name: "{{ item.name }}"

- name: Restart host if required
  when:
    - item.name in lab_virt_info
    - lab_recreate_network|bool
  block:
    - name: Shutdown host {{ item.name }}
      community.libvirt.virt:
        state: shutdown
        name: "{{ item.name }}"

    - name: Give host time to shut down
      ansible.builtin.pause:
        seconds: 10

    - name: Start host {{ item.name }}
      community.libvirt.virt:
        state: running
        name: "{{ item.name }}"

- name: Add additional disks to guest
  include_tasks: add_disk.yml
  loop: "{{ item.additional_disks }}"
  loop_control:
    loop_var: disk
  when: item.additional_disks is defined
