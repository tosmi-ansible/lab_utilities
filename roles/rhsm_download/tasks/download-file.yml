---
- name: Check if file already exists locally
  ansible.builtin.stat:
    path: '{{ rhsm_download_directory }}/{{ _filename }}'
    get_checksum: true
    checksum_algorithm: sha256
  register: _local_file_path

- debug: var=rhsm_download_offline_token

- name: Download file if needed
  block:
    # Generate a token per file download since they're only valid
    # for 5 minutes and large downloads may take longer
    - name: Generate Red Hat API access token
      ansible.builtin.uri:
        url: '{{ rhsm_download_access_token_url }}'
        method: POST
        body_format: form-urlencoded
        body:
          grant_type: refresh_token
          client_id: rhsm-api
          refresh_token: '{{ rhsm_download_offline_token | regex_replace("\s+","") }}'
      register: _access_token_request

    - name: Download file using RHSM API (this may take some time)
      ansible.builtin.get_url:
        url: '{{ rhsm_download_api_url }}/images/{{ rhsm_download_file_checksum[_filename] }}/download'
        headers:
          Authorization: Bearer {{ _access_token_request.json.access_token }}
        timeout: '{{ rhsm_download_api_url_timeout }}'
        dest: '{{ rhsm_download_directory }}/{{ _filename }}'
        mode: '{{ rhsm_download_file_mode }}'
        checksum: sha256:{{ rhsm_download_file_checksum[_filename] }}
  # end block
  when: not _local_file_path.stat.exists or
        _local_file_path.stat.checksum != rhsm_download_file_checksum[_filename]

...
